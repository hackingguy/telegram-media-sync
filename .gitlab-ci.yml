image: openjdk:17-jdk

variables:
  ANDROID_COMPILE_SDK: "34"
  ANDROID_BUILD_TOOLS: "34.0.0"
  ANDROID_SDK_TOOLS: "9477386"
  KEYSTORE_FILE: "telegram-drive.keystore"  # Path where keystore will be decoded

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget unzip
  # Setup path as android_home for moving/exporting the downloaded sdk into it
  - export ANDROID_HOME="${PWD}/android-home"
  # Create a new directory at specified location
  - install -d $ANDROID_HOME
  # Download android sdk tools
  - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  # move to the archive at android_home
  - pushd $ANDROID_HOME
  - unzip -d cmdline-tools cmdline-tools.zip
  - pushd cmdline-tools
  # since commandline tools version 7583922 the root folder is named "cmdline-tools"
  - mv cmdline-tools latest
  - popd
  - popd
  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/latest/bin/
  # Accept licenses
  - yes | sdkmanager --licenses || true
  - sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}"
  - sdkmanager "platform-tools"
  - sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}"
  # Not necessary, but nice to have
  - chmod +x ./gradlew
  - chmod +x ./ci-scripts/decode-keystore.sh
  - if [ "$CI_COMMIT_TAG" ]; then ./ci-scripts/decode-keystore.sh; fi

stages:
  - build
  - test
  - release

# Debug build
debug:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/apk/debug/app-debug.apk
    expire_in: 1 week

# Run tests
test:
  stage: test
  script:
    - ./gradlew test

# Release build
release:
  stage: release
  script:
    - ./gradlew assembleRelease
  artifacts:
    paths:
      - app/build/outputs/apk/release/app-release.apk
  only:
    - tags
  when: manual

# Create GitHub Release
create_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release created from tag $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Android APK'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/app/build/outputs/apk/release/app-release.apk?job=release'
  only:
    - tags
  when: manual 